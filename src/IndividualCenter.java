import sun.util.resources.cldr.se.CalendarData_se_FI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;

/**
 * Created by wk_51920 on 2014/12/8.
 */
public class IndividualCenter extends javax.swing.JFrame {

    private UserInfo userInfo;
    private ShareFileGUI shareFileGUI;
    private SearchResult searchResult;  //用于接收从服务器返回的搜索列表

    /**
     * Creates new form IndividualCenter
     */
    public IndividualCenter(UserInfo userInfo, ShareFileGUI shareFileGUI) {
        this.shareFileGUI=shareFileGUI;
        this.userInfo = userInfo;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        dlm = new DefaultListModel();         //用于向JList中添加删除元素
        goBackButton = new javax.swing.JButton();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);     //关闭窗口后，不会讲整个进程一起关闭

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "欢迎来到个人中心", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 18))); // NOI18N

        searchLabel.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        searchLabel.setText("点此按钮可以查看您已上传文件信息！");

        searchButton.setText("查看");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        uploadButton.setText("上传文件");
        uploadButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                uploadButtonActionPerformed(e);
            }
        });

        deleteButton.setText("删除文件");
        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteButtonActionPerformed(e);
            }
        });

        fileList.setModel(dlm);
        fileList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);


        jScrollPane2.setViewportView(fileList);

        goBackButton.setText("返回下载页面");
        goBackButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                goBackButtonActionPerformed(e);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(searchLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(goBackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchLabel)
                                        .addComponent(searchButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                                .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(34, 34, 34)
                                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(17, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
        );

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                super.windowClosing(e);
                shareFileGUI.setVisible(true);
                dispose();
            }
        });

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((dim.width - 747) / 2, (dim.height - 535) / 2);
        pack();
    }// </editor-fold>

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        ClientThread clientThread = null;
        try {
            clientThread = new ClientThread(InetAddress.getLocalHost(), 5500, new SearchResult(userInfo.getUserName(),1));
            clientThread.run();
            this.searchResult = clientThread.getSearchResult();
            dlm.clear();  //清空当前文件列表
            for (FileShare fileShare : searchResult.getResult()) {
                fileShare.setDisplayFlag(1);             //只返回文件路径
                dlm.addElement(fileShare);
            }
            fileList.setModel(dlm);
        } catch (UnknownHostException e) {
            System.out.println("查找本用户上传过的文件");
        } catch (IOException e1) {
            System.out.println("查找本用户时IO异常");
        }
    }

    private void deleteButtonActionPerformed(ActionEvent e) {
        ClientThread clientThread = null;
        FileShare fileShare = (FileShare) fileList.getSelectedValue();//从列表中得到选中的值
        fileShare.setFunction(2);    //将此文件信息的用途设为删除
        try {
            clientThread = new ClientThread(InetAddress.getLocalHost(), 5500, fileShare);
            clientThread.run();
            if (clientThread.getResultFlag() == 6) {
                searchResult.removeElement(fileShare);
                dlm.removeElement(fileShare);
                fileList.setModel(dlm);
                JOptionPane.showMessageDialog(this, "文件删除成功！");
            } else JOptionPane.showMessageDialog(this, "文件删除失败！");
        } catch (UnknownHostException evt) {
            System.out.println("查找本用户上传过的文件");
        } catch (IOException e1) {
            System.out.println("查找本用户时IO异常");
        }
    }


    private void goBackButtonActionPerformed(ActionEvent e) {
        shareFileGUI.setVisible(true);
        dispose();
    }

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(0);         //0:设定只能选择到文件  1:选择到目录
        int state = jfc.showOpenDialog(null);//此句是打开文件选择器界面的触发语句
        if (state == 1) {
            return;                          //撤销则返回
        } else {
            File f = jfc.getSelectedFile();     //f为选择到的文件
            ClientThread clientThread = null;
            try {
                clientThread = new ClientThread(InetAddress.getLocalHost(), 5500, new FileShare(f.getName(), f.length(), userInfo.getUserName(), InetAddress.getLocalHost().getHostAddress() + "", f.getAbsolutePath(), 1));
                clientThread.run();
                if (clientThread.getResultFlag() == 5)
                    JOptionPane.showMessageDialog(this, "该文件已存在！");
                else JOptionPane.showMessageDialog(this, "文件上传成功！");
            } catch (UnknownHostException ex) {
                System.out.println("ShareFileUI exitButton UnknownHostException!");
            } catch (IOException ex) {
                System.out.println("ShareFileUI exitButton IOException!");
            }
        }
    }



    // Variables declaration - do not modify
    private javax.swing.JButton deleteButton;
    private DefaultListModel dlm;         //用于动态添加和删除JList中的内容
    private javax.swing.JList fileList;
    private javax.swing.JButton goBackButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration
}
